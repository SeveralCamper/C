#include <bits/stdc++.h>

/*Как студент факультета компьютерных наук, Алекс сталкивается с трудной задачей — принятием душа. Он старается принимать душ ежедневно,
но, несмотря на все его усилия, всегда возникают препятствия. Ему требуется s минут, чтобы принять душ, а в сутках всего m минут!

У него уже запланировано n задач на день. Задача i представлена интервалом (li, ri), что означает,
что Алекс занят и не может принять душ в этот временной интервал (в любой момент времени строго между li и ri). Ни одна из задач не пересекается с другой.

Учитывая все n временных интервалов, сможет ли Алекс принять душ в этот день? Другими словами,
будет ли у Алекса свободный временной интервал длиной не менее s
?


В первом примере Алекс может принять душ в первые 3 минуты дня и не пропустить ни одну из задач.

Входные данные
Первая строка содержит одно целое число t (1≤t≤104) — количество наборов входных данных.

Первая строка каждого набора входных данных содержит три целых числа n, s и m (1≤n≤2⋅105; 1≤s,m≤109) — количество временных интервалов, которые Алекс уже запланировал,
время, необходимое Алексу для принятия душа, и количество минут в сутках.

Затем следуют n строк, i - я из которых содержит два целых числа li и ri 0≤li<ri≤m) — временной интервал i-й задачи. Ни одна из задач не накладывается на другую.

Дополнительное ограничение на входные данные: li>ri−1 для каждого i>1. Сумма n по всем наборам входных данных не превышает 2⋅105.

Выходные данные
Для каждого набора входных данных выведите «YES» (без кавычек), если Алекс может принять душ для данного набора входных данных,
и «NO» (также без кавычек) в противном случае.

Вы можете выводить «YES» и «NO» в любом регистре (например, строки «yEs», «yes», и «Yes» будут признаны положительным ответом).*/

int main()
{
	long long int t;
	std::cin >> t;
	while(t)
	{
		long long int n, s, m;
		std::cin >> n >> s >> m;
		int arr[m + 1];
		for (int i = 0; i < m + 1; i++) {
			arr[i] = -1;
		}
		while(n)
		{
			long long int l, r;
			std::cin >> l >> r;
			arr[l] = l;
			arr[r] = r;
			n--;
		}

		/*std::cout << "Arr:" << std::endl;
		for (int i = 0; i < m + 1; i++)
		{
			std::cout << arr[i] << ' ';
		}
		std::cout << std::endl; */

		int counter = 0;
		for (int i = 0; i < m + 1; i++) {
			// std::cout << "counter: " << counter << " s " << s << std::endl;
			if (arr[i] == -1) 
			{
				counter++;
				if (arr[i + 1] != -1 && i != m && counter != s)
				{
					counter++;
				}
			}
			else
			{
				counter = 0;
			}

			if (counter == s) {
				std::cout << "YES" << std::endl;
				break;
			}
		}
		if (counter != s)
		{
			std::cout << "NO" << std::endl;
		}
		t--;
	}

	return 0;
} // НЕПРАВИЛЬНО РЕШЕННАЯ
