#include <bits/stdc++.h>

/*Перед Вами матрица размера 5 × 5, состоящая из 24-x нулей и единственной единицы. Строки матрицы пронумеруем числами от 1 до 5 сверху вниз, столбцы матрицы пронумеруем числами от 1 до 5 слева направо. За один ход разрешается применить к матрице одно из двух следующих преобразований:

Поменять местами две соседние строки матрицы, то есть строки с номерами i и i + 1 для некоторого целого i (1 ≤ i < 5).
Поменять местами два соседних столбца матрицы, то есть столбцы с номерами j и j + 1 для некоторого целого j (1 ≤ j < 5).
Вы считаете, что матрица будет выглядеть красиво, если единственная единица этой матрицы будет находиться в ее центре (в клетке, которая находится на пересечении третьей строки и третьего столбца). Посчитайте, какое минимальное количество ходов потребуется, чтобы сделать матрицу красивой.

Входные данные
Входные данные состоят из пяти строк, в каждой из которых записаны пять целых чисел: j-ое число в i-ой строке входных данных обозначает элемент матрицы, стоящий на пересечении i-ой строки и j-ого столбца. Гарантируется, что матрица состоит из 24-x нулей и единственной единицы.

Выходные данные
Выведите единственное целое число — минимальное количество действий, которое требуется, чтобы сделать матрицу красивой.*/

int main()
{
	int matrix[5][5];
	int mi, mj;
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			std::cin >> matrix[i][j];
			if (matrix[i][j] == 1)
			{
				mi = i;
				mj = j;
			}
		}
	}

	int res = 0;
	if (mi != 2)
	{
		for (int i = 0; i < 5; i++)
		{
			if (mi > 2)
			{
				res++;
				mi--;
			}
			else if (mi < 2)
			{
				res++;
				mi++;
			}
			else if (mi == 2)
			{
				break;
			}
		}
	}

	if (mj != 2)
	{
		for (int i = 0; i < 5; i++)
		{
			if (mj > 2)
			{
				res++;
				mj--;
			}
			else if (mj < 2)
			{
				res++;
				mj++;
			}
			else if (mj == 2)
			{
				break;
			}
		}
	}

	std::cout << res << std::endl;

	return 0;
}